{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Toast/Toast.module.css","components/Loader/Loader.module.css","components/Filter/Filter.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-reducer.js","redux/store.js","redux/phonebook/contacts-selectors.js","redux/phonebook/phonebook-operations.js","components/Toast/Toast.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","_","payload","state","filter","id","loading","combineReducers","middleware","getDefaultMiddleware","store","configureStore","reducer","contacts","phonebookReducer","devTools","process","getAllContacts","getFilter","selectors","getLoading","getVisibleContacts","createSelector","contact","name","toLowerCase","includes","axios","defaults","baseURL","operations","fetchContacts","dispatch","get","then","data","catch","error","addContact","number","post","deleteContact","contactId","delete","Toast","message","createPortal","className","s","container","document","querySelector","ContactForm","haveError","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","find","item","showToast","onAddContact","prev","errorMessage","setTimeout","this","CSSTransition","in","timeout","classNames","unmountOnExit","onSubmit","form","label","input","type","onChange","button","Component","connect","phonebookSelectors","phone","phonebookOperations","onChangeFilter","length","onDeleteContact","TransitionGroup","component","list","map","appear","listItem","onClick","Loading","wrapper","inner","App","isLoading","Loader","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fffcb1cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3S2xr\",\"label\":\"ContactForm_label__1k5KR\",\"input\":\"ContactForm_input__1FHub\",\"button\":\"ContactForm_button__DGGt0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2lPUJ\",\"listItem\":\"ContactList_listItem__3WH4u\",\"button\":\"ContactList_button__3fqYv\",\"appear\":\"ContactList_appear__3nxzs\",\"appearActive\":\"ContactList_appearActive__2cfu5\",\"enter\":\"ContactList_enter__2AIMc\",\"enterActive\":\"ContactList_enterActive__3mEGu\",\"exit\":\"ContactList_exit__20z4l\",\"exitActive\":\"ContactList_exitActive__7eRqN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Toast_container__1r2en\",\"message\":\"Toast_message__1B2M8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Loader_wrapper__3k5QN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2jEjJ\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"phonebook/fetchContactsRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"phonebook/fetchContactsSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"phonebook/fetchContactsError\");\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"phonebook/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"phonebook/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"phonebook/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"phonebook/changeFilter\");\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  changeFilter,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  fetchContactsSuccess,\r\n  addContactRequest,\r\n  deleteContactRequest,\r\n  fetchContactsRequest,\r\n  addContactError,\r\n  deleteContactError,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import phonebookReducer from \"./phonebook/phonebook-reducer\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n\r\nconst middleware = [...getDefaultMiddleware()];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default store;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getAllContacts = (state) => {\r\n  return state.contacts.items;\r\n};\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  }\r\n);\r\n\r\nconst selectors = { getLoading, getAllContacts, getFilter, getVisibleContacts };\r\n\r\nexport default selectors;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  fetchContactsSuccess,\r\n  addContactRequest,\r\n  deleteContactRequest,\r\n  fetchContactsRequest,\r\n  addContactError,\r\n  deleteContactError,\r\n  fetchContactsError,\r\n} from \"./phonebook-actions\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:4040\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactError(error)));\r\n};\r\n\r\nconst operations = { fetchContacts, addContact, deleteContact };\r\n\r\nexport default operations;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Toast.module.css\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nfunction Toast({ message }) {\r\n  return createPortal(\r\n    <div className={s.container}>\r\n      <p className={s.message}>{message}</p>\r\n    </div>,\r\n    document.querySelector(\"#toast\")\r\n  );\r\n}\r\n\r\nToast.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Toast;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactForm.module.css\";\r\nimport Toast from \"../Toast/Toast\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookSelectors from \"../../redux/phonebook/contacts-selectors\";\r\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    haveError: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n\r\n    if (name === \"\" || number === \"\") {\r\n      this.showToast(\"Name or number can't be empty string\");\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.props.contacts.find((item) => item.name === name)) {\r\n      this.showToast(`${name} is already in contacts`);\r\n      this.setState({ name: \"\", number: \"\" });\r\n      return;\r\n    }\r\n\r\n    this.props.onAddContact(name, number);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  showToast = (message) => {\r\n    this.setState((prev) => ({\r\n      haveError: !prev.haveError,\r\n      errorMessage: message,\r\n    }));\r\n    setTimeout(() => {\r\n      this.setState((prev) => ({\r\n        haveError: !prev.haveError,\r\n      }));\r\n    }, 1500);\r\n  };\r\n\r\n  render() {\r\n    const { errorMessage, haveError } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={haveError}\r\n          timeout={250}\r\n          classNames=\"toast\"\r\n          unmountOnExit\r\n        >\r\n          <Toast message={errorMessage} />\r\n        </CSSTransition>\r\n\r\n        <form onSubmit={this.handleSubmit} className={s.form}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={this.state.number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={s.button}>\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: phonebookSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddContact: (name, phone) =>\r\n    dispatch(phonebookOperations.addContact(name, phone)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport s from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/phonebook/phonebook-actions\";\r\nimport phonebookSelectors from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nfunction Filter({ value = \"\", onChangeFilter, items }) {\r\n  return (\r\n    <CSSTransition\r\n      in={items.length > 0}\r\n      timeout={500}\r\n      classNames=\"filter\"\r\n      unmountOnExit\r\n    >\r\n      <div>\r\n        <h3>Find contact by name</h3>\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n        />\r\n      </div>\r\n    </CSSTransition>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: phonebookSelectors.getFilter(state),\r\n  items: phonebookSelectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (e) => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { connect } from \"react-redux\";\r\nimport phonebookOperations from \"../../redux/phonebook/phonebook-operations\";\r\nimport phonebookSelectors from \"../../redux/phonebook/contacts-selectors\";\r\n\r\nfunction ContactList({ contacts, onDeleteContact }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={s.list}>\r\n      {contacts.length === 0 ? (\r\n        <CSSTransition\r\n          key={1}\r\n          timeout={700}\r\n          classNames=\"message-empty\"\r\n          unmountOnExit\r\n        >\r\n          <li>Contact list empty for now</li>\r\n        </CSSTransition>\r\n      ) : (\r\n        contacts.map(({ name, number, id }) => {\r\n          return (\r\n            <CSSTransition key={id} appear={true} timeout={250} classNames={s}>\r\n              <li className={s.listItem}>\r\n                <span>\r\n                  {name}: {number}\r\n                </span>\r\n                <button\r\n                  type=\"button\"\r\n                  className={s.button}\r\n                  onClick={() => onDeleteContact(id)}\r\n                >\r\n                  Delete contact\r\n                </button>\r\n              </li>\r\n            </CSSTransition>\r\n          );\r\n        })\r\n      )}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n      id: PropTypes.number,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: phonebookSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(phonebookOperations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport s from \"./Loader.module.css\";\r\n\r\nfunction Loading(props) {\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div className={s.inner}>\r\n                <Loader/>\r\n            </div>\r\n        </div>,\r\n        document.querySelector(\"toast\")\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport phonebookSelectors from \"./redux/phonebook/contacts-selectors\";\nimport phonebookOperations from \"./redux/phonebook/phonebook-operations\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport { CSSTransition } from \"react-transition-group\";\nimport Loader from \"./components/Loader/Loader\";\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.props.isLoading && <Loader />}\n\n        <div className=\"Container\">\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={500}\n            classNames=\"title\"\n            unmountOnExit\n          >\n            <h1>Phonebook</h1>\n          </CSSTransition>\n\n          <ContactForm />\n\n          <h1>Contacts</h1>\n\n          <Filter />\n\n          <ContactList />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoading: phonebookSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}